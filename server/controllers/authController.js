const User = require('../models/User');
const bcrypt = require('bcrypt');
const { v4: uuidv4 } = require('uuid');

// Register Controller
exports.register = async (req, res) => {
  const { username, email, password } = req.body;

  // Basic validation
  if (!username || !email || !password) {
    return res.status(400).json({ error: 'All fields are required' });
  }

  try {
    // Check if user already exists
    const existingUser = await User.findOne({ email });
    if (existingUser) {
      return res.status(400).json({ message: 'User already exists' });
    }

    // Hash the password
    const hashedPassword = await bcrypt.hash(password, 10);

    // Create user (ownerId will be auto-generated by schema)
    const newUser = await User.create({
      name: username,
      email,
      password: hashedPassword,
    });

    // Return only needed info
    res.status(201).json({
      user: {
        username: newUser.name,
        email: newUser.email,
        ownerId: newUser.ownerId, // ✅ returned here
      },
    });
  } catch (err) {
    console.error('❌ Error in register:', err);
    res.status(500).json({ message: 'Server error', error: err.message });
  }
};
